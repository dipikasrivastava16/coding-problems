//Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.
//
//Example:
//
//Input: [0,1,0,3,12]
//Output: [1,3,12,0,0]
//Note:
//
//You must do this in-place without making a copy of the array.
//Minimize the total number of operations.

class Solution {
    func moveZeroes(_ nums: inout [Int]) {
    var i = 0
    var lastIntegerIndex = -1
        if nums.count == 1 { return }
    while i < nums.count {
        if nums[i] != 0 {
            lastIntegerIndex += 1
            nums[lastIntegerIndex] = nums[i]
            if i != lastIntegerIndex {
                nums[i] = 0
            }
            i = i + 1
            continue
        }
        else if nums[i] == 0  && i != nums.count - 1 && nums[i+1] != 0 {
            lastIntegerIndex += 1
            nums[lastIntegerIndex] = nums[i + 1]
            nums[i+1] = 0
        }
        i += 2

    }
}
}
