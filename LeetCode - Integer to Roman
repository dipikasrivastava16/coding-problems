// Given an integer, convert it to a roman numeral. Input is guaranteed to be within the range from 1 to 3999.
class Solution {
    func intToRoman(_ num: Int) -> String {
        if num == 0 {return ""}
        let array = String(num).flatMap{ Int(String($0)) }
        var str = ""
        let mapping = [1:"I",5:"V",10:"X",50:"L",100:"C",500:"D",1000:"M",4:"IV",9:"IX",40:"XL",90:"XC",400:"CD",900:"CM"]
        for i in 0..<array.count {
            let power = Int(pow(Double(10), Double(array.count-1-i)))
            let digit = array[i]
            let number = digit * power
            print(number)
            if digit == 4 || digit == 9 || digit == 5 {
                str = str + mapping[number]!
                
            } else {
                // find equivalent roman for power
                if digit > 5 {
                   str = str + mapping[power * 5]! + String(repeating: mapping[power]!, count: digit - 5)
                } else {
                    str = str + String(repeating: mapping[power]!, count: digit)
                }
            }
        }
        
        return str
    }
}
